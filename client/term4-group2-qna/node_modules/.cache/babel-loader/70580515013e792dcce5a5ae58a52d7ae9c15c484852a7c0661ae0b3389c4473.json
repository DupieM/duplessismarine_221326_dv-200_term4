{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mdpma\\\\Documents\\\\Open Window\\\\Term-4-Group-2---Project\\\\client\\\\term4-group2-qna\\\\src\\\\components\\\\elements\\\\Form\\\\form.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useLayoutEffect, useState } from 'react';\nimport './form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Form = ({\n  fields,\n  initialValues,\n  onSubmit,\n  onCancel\n}) => {\n  _s();\n  var _fields$, _fields$2;\n  const [formValues, setFormValues] = useState(initialValues || {});\n  const [hover, setHover] = useState(false);\n  const [listOfImages, setListOfImages] = useState([]);\n  const btnIndex = 6;\n  function readAndConvertFileToBase64(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        resolve(reader.result.split(',')[1]);\n      };\n      reader.onerror = error => {\n        reject(error);\n      };\n      reader.readAsDataURL(file);\n    });\n  }\n  ;\n  const returnButtonWithCancel = () => {\n    var _fields$btnIndex;\n    if ((_fields$btnIndex = fields[btnIndex]) !== null && _fields$btnIndex !== void 0 && _fields$btnIndex.cancelLabel) {\n      var _fields$btnIndex2;\n      if (((_fields$btnIndex2 = fields[btnIndex]) === null || _fields$btnIndex2 === void 0 ? void 0 : _fields$btnIndex2.cancelLabel) !== \"\") {\n        var _fields$btnIndex3, _fields$btnIndex4;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            gap: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"100%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                width: \"100%\"\n              },\n              className: \"button-primary form-btn\",\n              type: \"submit\",\n              children: (_fields$btnIndex3 = fields[btnIndex]) === null || _fields$btnIndex3 === void 0 ? void 0 : _fields$btnIndex3.submitLabel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                width: \"fit-content\"\n              },\n              className: \"button-secondary form-btn\",\n              onClick: onCancel,\n              children: (_fields$btnIndex4 = fields[btnIndex]) === null || _fields$btnIndex4 === void 0 ? void 0 : _fields$btnIndex4.cancelLabel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this);\n      }\n    } else {\n      var _fields$btnIndex5;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          gap: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            width: \"100%\"\n          },\n          className: \"button-primary form-btn\",\n          type: \"submit\",\n          children: (_fields$btnIndex5 = fields[btnIndex]) === null || _fields$btnIndex5 === void 0 ? void 0 : _fields$btnIndex5.submitLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this);\n    }\n  };\n  const handleInputChange = async (e, fieldName, fieldType) => {\n    var _e$target, _e$target2, _e$target3;\n    let inputValue = (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.type) === 'file' ? e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.files : e === null || e === void 0 ? void 0 : (_e$target3 = e.target) === null || _e$target3 === void 0 ? void 0 : _e$target3.value;\n    if (fieldType === 'number') {\n      inputValue = parseInt(inputValue, 10);\n    } else if (fieldType === 'arrayOfStrings') {\n      inputValue = inputValue.split(',').map(item => item.trim());\n    } else if (fieldType === 'file') {\n      const files = e.target.files;\n      const base64Promises = [];\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        base64Promises.push(readAndConvertFileToBase64(file));\n      }\n      try {\n        const base64Array = await Promise.all(base64Promises);\n        // Push each image to an array\n        inputValue = base64Array;\n\n        // Update the listOfImages state with the base64 strings\n        setListOfImages(prevImages => [...prevImages, ...base64Array]);\n      } catch (error) {\n        console.error('Error converting files to base64:', error);\n        inputValue = [];\n      }\n    } else if (fieldType === 'checkbox') {\n      inputValue = e.target.checked;\n    }\n    setFormValues(prevState => ({\n      ...prevState,\n      [fieldName]: inputValue\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(formValues);\n  };\n  useEffect(() => {\n    console.log(fields === null || fields === void 0 ? void 0 : fields.cancelLabel);\n    console.log(formValues);\n  }, [formValues, hover, listOfImages]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"formWrap\",\n    onSubmit: handleSubmit,\n    enctype: \"multipart/form-data\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formHeader\",\n        children: (_fields$ = fields[0]) === null || _fields$ === void 0 ? void 0 : _fields$.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formDescription\",\n        children: (_fields$2 = fields[1]) === null || _fields$2 === void 0 ? void 0 : _fields$2.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"formTophr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formInputs\",\n      children: fields.map(field => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [field.type === 'text' && /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: field === null || field === void 0 ? void 0 : field.label,\n          className: \"text\",\n          type: \"text\",\n          value: formValues[field.name] || '',\n          onChange: e => handleInputChange(e, field.name, 'string')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }, this), field.type === 'number' && /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: field === null || field === void 0 ? void 0 : field.label,\n          type: \"number\",\n          value: formValues[field.name] || '',\n          onChange: e => handleInputChange(e, field.name, 'number')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }, this), field.type === 'paragraph' && /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: field === null || field === void 0 ? void 0 : field.label,\n          value: formValues[field.name] || '',\n          onChange: e => handleInputChange(e, field.name, 'paragraph')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }, this), field.type === 'arrayOfStrings' && /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: field === null || field === void 0 ? void 0 : field.label,\n          className: \"text\",\n          type: \"text\"\n          // placeholder=\"item1, item2, item3, ...\"\n          ,\n          value: formValues[field.name] ? formValues[field.name].join(', ') : '',\n          onChange: e => handleInputChange(e, field.name, 'arrayOfStrings')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }, this), field.type === 'file' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"imageListWrap\",\n          onMouseOver: e => setHover(true),\n          children: [listOfImages === null || listOfImages === void 0 ? void 0 : listOfImages.map((image, i) => {\n            return /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"imageUploaded\",\n              src: \"data:image/png;base64,\" + image,\n              alt: \"Uploaded Image\"\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 45\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"fileInput\",\n            name: field === null || field === void 0 ? void 0 : field.name,\n            type: \"file\",\n            accept: \".png, .jpeg, .jpg, .gif\",\n            multiple: field.multiple,\n            onChange: e => {\n              handleInputChange(e, field.name, 'file');\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"fileInput\",\n            id: \"customUploadButton\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"ri-add-line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"uploadBtnLabel\",\n              children: \" Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 29\n        }, this), field.type === 'checkbox' && /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: field === null || field === void 0 ? void 0 : field.label,\n          type: \"checkbox\",\n          checked: formValues[field.name] || false,\n          onChange: e => handleInputChange(e, field.name, 'checkbox')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"formBtmhr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), returnButtonWithCancel()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"HkqtZJ+FKL//yzIA2M0EGc4OcU0=\");\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useEffect","useLayoutEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","fields","initialValues","onSubmit","onCancel","_s","_fields$","_fields$2","formValues","setFormValues","hover","setHover","listOfImages","setListOfImages","btnIndex","readAndConvertFileToBase64","file","Promise","resolve","reject","reader","FileReader","onload","result","split","onerror","error","readAsDataURL","returnButtonWithCancel","_fields$btnIndex","cancelLabel","_fields$btnIndex2","_fields$btnIndex3","_fields$btnIndex4","style","display","gap","children","width","className","type","submitLabel","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_fields$btnIndex5","handleInputChange","e","fieldName","fieldType","_e$target","_e$target2","_e$target3","inputValue","target","files","value","parseInt","map","item","trim","base64Promises","i","length","push","base64Array","all","prevImages","console","checked","prevState","handleSubmit","preventDefault","log","enctype","title","description","field","placeholder","label","name","onChange","join","onMouseOver","image","src","alt","id","accept","multiple","for","_c","$RefreshReg$"],"sources":["C:/Users/Mdpma/Documents/Open Window/Term-4-Group-2---Project/client/term4-group2-qna/src/components/elements/Form/form.js"],"sourcesContent":["import React, { useEffect, useLayoutEffect, useState } from 'react';\r\nimport './form.css'\r\n\r\nexport const Form = ({ fields, initialValues, onSubmit, onCancel }) => {\r\n\r\n    const [formValues, setFormValues] = useState(initialValues || {});\r\n    const [hover, setHover] = useState(false);\r\n    const [listOfImages, setListOfImages] = useState([]);\r\n    const btnIndex = 6\r\n\r\n    function readAndConvertFileToBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.onload = () => {\r\n                resolve(reader.result.split(',')[1]);\r\n            };\r\n            reader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        });\r\n    };\r\n\r\n    const returnButtonWithCancel = () => {\r\n        if (fields[btnIndex]?.cancelLabel) {\r\n            if (fields[btnIndex]?.cancelLabel !== \"\") {\r\n                return (\r\n                    <div style={{ display: \"flex\", gap: \"20px\" }}>\r\n                        <div style={{ width: \"100%\" }}>\r\n                            <button style={{ width: \"100%\" }} className='button-primary form-btn' type=\"submit\">{fields[btnIndex]?.submitLabel}</button>\r\n                        </div>\r\n                        <div style={{ width: \"\" }}>\r\n                            <button style={{ width: \"fit-content\" }} className='button-secondary form-btn' onClick={onCancel}>{fields[btnIndex]?.cancelLabel}</button>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n        } else {\r\n            return (\r\n                <div style={{ display: \"flex\", gap: \"20px\" }}>\r\n                    <button style={{ width: \"100%\" }} className='button-primary form-btn' type=\"submit\">{fields[btnIndex]?.submitLabel}</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleInputChange = async (e, fieldName, fieldType) => {\r\n        let inputValue = e?.target?.type === 'file' ? e?.target?.files : e?.target?.value;\r\n\r\n        if (fieldType === 'number') {\r\n            inputValue = parseInt(inputValue, 10);\r\n        } else if (fieldType === 'arrayOfStrings') {\r\n            inputValue = inputValue.split(',').map(item => item.trim());\r\n        } else if (fieldType === 'file') {\r\n            const files = e.target.files;\r\n            const base64Promises = [];\r\n\r\n            for (let i = 0; i < files.length; i++) {\r\n                const file = files[i];\r\n                base64Promises.push(readAndConvertFileToBase64(file));\r\n            }\r\n\r\n            try {\r\n                const base64Array = await Promise.all(base64Promises);\r\n                // Push each image to an array\r\n                inputValue = base64Array;\r\n\r\n                // Update the listOfImages state with the base64 strings\r\n                setListOfImages(prevImages => [...prevImages, ...base64Array]);\r\n            } catch (error) {\r\n                console.error('Error converting files to base64:', error);\r\n                inputValue = [];\r\n            }\r\n        } else if (fieldType === 'checkbox') {\r\n            inputValue = e.target.checked;\r\n        }\r\n\r\n        setFormValues(prevState => ({\r\n            ...prevState,\r\n            [fieldName]: inputValue,\r\n        }));\r\n    };\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        onSubmit(formValues);\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(fields?.cancelLabel)\r\n        console.log(formValues)\r\n    }, [formValues, hover, listOfImages]);\r\n\r\n\r\n    return (\r\n        <form className='formWrap' onSubmit={handleSubmit} enctype=\"multipart/form-data\">\r\n            <div>\r\n                <div className='formHeader'>{fields[0]?.title}</div>\r\n                <div className='formDescription'>{fields[1]?.description}</div>\r\n                <hr className='formTophr' />\r\n            </div>\r\n            <div className='formInputs'>\r\n                {fields.map(field => (\r\n                    <>\r\n                        {/* <label>{field.label}</label> */}\r\n                        {field.type === 'text' && (\r\n                            <input\r\n                                placeholder={field?.label}\r\n                                className='text'\r\n                                type=\"text\"\r\n                                value={formValues[field.name] || ''}\r\n                                onChange={e => handleInputChange(e, field.name, 'string')}\r\n                            />\r\n                        )}\r\n                        {field.type === 'number' && (\r\n                            <input\r\n                                placeholder={field?.label}\r\n                                type=\"number\"\r\n                                value={formValues[field.name] || ''}\r\n                                onChange={e => handleInputChange(e, field.name, 'number')}\r\n                            />\r\n                        )}\r\n                        {field.type === 'paragraph' && (\r\n                            <textarea\r\n                                placeholder={field?.label}\r\n                                value={formValues[field.name] || ''}\r\n                                onChange={e => handleInputChange(e, field.name, 'paragraph')}\r\n                            ></textarea>\r\n                        )}\r\n                        {field.type === 'arrayOfStrings' && (\r\n                            <input\r\n                                placeholder={field?.label}\r\n                                className='text'\r\n                                type=\"text\"\r\n                                // placeholder=\"item1, item2, item3, ...\"\r\n                                value={formValues[field.name] ? formValues[field.name].join(', ') : ''}\r\n                                onChange={e => handleInputChange(e, field.name, 'arrayOfStrings')}\r\n                            />\r\n                        )}\r\n                        {field.type === 'file' && (\r\n                            <div className='imageListWrap' onMouseOver={e => setHover(true)}>\r\n                                {\r\n                                    listOfImages?.map((image, i) => {\r\n                                        return (\r\n                                            <img key={i} className=\"imageUploaded\" src={\"data:image/png;base64,\" + image} alt='Uploaded Image' />\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <input\r\n                                    id=\"fileInput\"\r\n                                    name={field?.name}\r\n                                    type=\"file\"\r\n                                    accept=\".png, .jpeg, .jpg, .gif\"\r\n                                    multiple={field.multiple}\r\n                                    onChange={e => { handleInputChange(e, field.name, 'file'); }}\r\n                                />\r\n                                <label for=\"fileInput\" id=\"customUploadButton\">\r\n                                    <i className=\"ri-add-line\"></i>\r\n                                    <div className='uploadBtnLabel'> Image</div>\r\n                                </label>\r\n                            </div>\r\n                        )}\r\n                        {field.type === 'checkbox' && (\r\n                            <input\r\n                                placeholder={field?.label}\r\n                                type=\"checkbox\"\r\n                                checked={formValues[field.name] || false}\r\n                                onChange={e => handleInputChange(e, field.name, 'checkbox')}\r\n                            />\r\n                        )}\r\n                    </>\r\n                ))}\r\n            </div>\r\n\r\n            <div>\r\n                <hr className='formBtmhr' />\r\n                {\r\n                    returnButtonWithCancel()\r\n\r\n                }\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}