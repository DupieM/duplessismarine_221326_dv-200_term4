{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mdpma\\\\Documents\\\\Open Window\\\\Term-4-Group-2---Project\\\\client\\\\term4-group2-qna\\\\src\\\\components\\\\elements\\\\Cards\\\\QuestionCard\\\\Card Functions\\\\Interaction\\\\BottomButtons.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport requestDataOf from '../../../../../util/DataRequests/fetchData';\nimport { useInteraction } from '../../../../../util/UI/interactionListener';\nimport { useNavigate } from 'react-router-dom';\nimport { useLoggedInUser, useToken } from '../../../../../util/UseContext/loggedInUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BottomButtons = ({\n  question,\n  index\n}) => {\n  _s();\n  var _question$upVotes, _question$downVotes, _question$answers;\n  const navigatTo = useNavigate();\n  const [upVote, setUpVote] = useState(false);\n  const [downVote, setDownVote] = useState(false);\n  const [saved, setSaved] = useState(false);\n  const {\n    token\n  } = useToken();\n  const {\n    loggedInUser\n  } = useLoggedInUser();\n  useEffect(() => {\n    // index && console.log(index);\n\n    // Upvote State Check\n    for (let i = 0; i < (question === null || question === void 0 ? void 0 : (_question$topics = question.topics) === null || _question$topics === void 0 ? void 0 : _question$topics.length); i++) {\n      var _question$topics;\n      if ((question === null || question === void 0 ? void 0 : question.upVotes[i]) === (loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser._id)) {\n        setUpVote(prevUpVote => {\n          // Use a callback function to get the previous state and update it\n          // console.log(`UpVoteState: ${index}`, prevUpVote); // Log the updated value\n          return true; // Update the state to the opposite value\n        });\n        // break;\n      }\n    }\n  }, [useInteraction()]);\n\n  // Button Functions\n  const handleUpvote = () => {\n    if (upVote) {\n      // Remove the upvote\n      const updatedUpVotes = question.upVotes.filter(userId => userId !== (loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser._id));\n      const upVotePayload = {\n        upVotes: updatedUpVotes\n      };\n      updateUpVotes(upVotePayload);\n    } else {\n      // Add the upvote\n      const updatedUpVotes = [...question.upVotes, loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser._id];\n      const upVotePayload = {\n        upVotes: updatedUpVotes\n      };\n      updateUpVotes(upVotePayload);\n    }\n  };\n  const updateUpVotes = upVotePayload => {\n    // Check if the user has already upvoted the question\n    const userUpvotedIndex = question === null || question === void 0 ? void 0 : question.upVotes.indexOf(loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser._id);\n    if (userUpvotedIndex !== -1) {\n      // If the user has already upvoted, remove their upvote\n      const updatedUpVotes = [...question.upVotes.slice(0, userUpvotedIndex), ...question.upVotes.slice(userUpvotedIndex + 1)];\n      const upVotePayload = {\n        upVotes: updatedUpVotes\n      };\n\n      // Update the question with the new upvotes array\n      requestDataOf.request(\"patch\", `updateQuestion/${question === null || question === void 0 ? void 0 : question._id}`, token, upVotePayload).then(response => {\n        setUpVote(false);\n        // Handle the response if necessary\n        alert(\"Upvote removed\");\n      }).catch(error => {\n        // Handle the error if necessary\n        console.error(error);\n      });\n    } else {\n      setUpVote(true);\n      // If the user hasn't upvoted, add their upvote\n      const updatedUpVotes = [...question.upVotes, loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser._id];\n      const upVotePayload = {\n        upVotes: updatedUpVotes\n      };\n\n      // Update the question with the new upvotes array\n      requestDataOf.request(\"patch\", `updateQuestion/${question === null || question === void 0 ? void 0 : question._id}`, token, upVotePayload).then(response => {\n        setUpVote(true);\n        // Handle the response if necessary\n        alert(\"Upvoted\");\n      }).catch(error => {\n        // Handle the error if necessary\n        console.error(error);\n      });\n    }\n  };\n  const updateDownVotes = () => {\n    // Check if the user has already downvoted the question\n    const userDownvotedIndex = question === null || question === void 0 ? void 0 : question.downVotes.indexOf(loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser._id);\n    if (userDownvotedIndex !== -1) {\n      // If the user has already downvoted, remove their downvote\n      const updatedDownVotes = [...question.downVotes.slice(0, userDownvotedIndex), ...question.downVotes.slice(userDownvotedIndex + 1)];\n      const downVotePayload = {\n        downVotes: updatedDownVotes\n      };\n\n      // Update the question with the new downvotes array\n      requestDataOf.request(\"patch\", `updateQuestion/${question === null || question === void 0 ? void 0 : question._id}`, token, downVotePayload).then(response => {\n        setDownVote(false);\n        // Handle the response if necessary\n        alert(\"Downvote removed\");\n      }).catch(error => {\n        // Handle the error if necessary\n        console.error(error);\n      });\n    } else {\n      setDownVote(true);\n      // If the user hasn't downvoted, add their downvote\n      const updatedDownVotes = [...question.downVotes, loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser._id];\n      const downVotePayload = {\n        downVotes: updatedDownVotes\n      };\n\n      // Update the question with the new downvotes array\n      requestDataOf.request(\"patch\", `updateQuestion/${question === null || question === void 0 ? void 0 : question._id}`, token, downVotePayload).then(response => {\n        setDownVote(true);\n        // Handle the response if necessary\n        alert(\"Downvoted\");\n      }).catch(error => {\n        // Handle the error if necessary\n        console.error(error);\n      });\n    }\n  };\n  const updateSaved = () => {\n    var _loggedInUser$saved;\n    const userSavedQuestions = (loggedInUser === null || loggedInUser === void 0 ? void 0 : (_loggedInUser$saved = loggedInUser.saved) === null || _loggedInUser$saved === void 0 ? void 0 : _loggedInUser$saved.questions) || [];\n    const userSavedIndex = userSavedQuestions.indexOf(question === null || question === void 0 ? void 0 : question._id);\n    if (userSavedIndex !== -1) {\n      // If the user has already saved the question, remove it from saved\n      userSavedQuestions.splice(userSavedIndex, 1);\n      const userPayload = {\n        saved: {\n          questions: userSavedQuestions\n        }\n      };\n      console.log('Remove Payload:', userPayload); // Add this line for debugging\n\n      // Update the user object with the new saved array\n      requestDataOf.request(\"patch\", `updateUser/${loggedInUser._id}`, token, userPayload).then(response => {\n        var _response$data;\n        const user = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.user;\n        console.log('Updated User:', user); // Add this line for debugging\n        sessionStorage.setItem('user', JSON.stringify(user));\n        alert(\"Question removed from saved\");\n      }).catch(error => {\n        console.error(error);\n      });\n    } else {\n      // If the user hasn't saved the question, add it to saved\n      const updatedSaved = [...userSavedQuestions, question === null || question === void 0 ? void 0 : question._id];\n      const userPayload = {\n        saved: {\n          questions: updatedSaved\n        }\n      };\n      console.log('Add Payload:', userPayload); // Add this line for debugging\n\n      // Update the user object with the new saved array\n      requestDataOf.request(\"patch\", `updateUser/${loggedInUser._id}`, token, userPayload).then(response => {\n        var _response$data2;\n        const user = response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.user;\n        console.log('Updated User:', user); // Add this line for debugging\n        sessionStorage.setItem('user', JSON.stringify(user));\n        alert(\"Question saved\");\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n\n  // Card Bottom Interactions\n  const cardBtmInteractions = [{\n    name: 'upVote',\n    icon: \"arrow_circle_up\",\n    interactionCount: question === null || question === void 0 ? void 0 : (_question$upVotes = question.upVotes) === null || _question$upVotes === void 0 ? void 0 : _question$upVotes.length,\n    upVote: upVote,\n    action: updateUpVotes\n  }, {\n    name: 'downVote',\n    icon: \"arrow_circle_down\",\n    interactionCount: question === null || question === void 0 ? void 0 : (_question$downVotes = question.downVotes) === null || _question$downVotes === void 0 ? void 0 : _question$downVotes.length,\n    downVote: downVote,\n    action: updateDownVotes\n  }, {\n    name: 'comment',\n    icon: \"mode_comment\",\n    interactionCount: question === null || question === void 0 ? void 0 : (_question$answers = question.answers) === null || _question$answers === void 0 ? void 0 : _question$answers.length,\n    action: () => {\n      navigatTo(`/question/${question === null || question === void 0 ? void 0 : question._id}`);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questionBtmInteractionsWrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"questionBtmRightInteraction\",\n      children: cardBtmInteractions === null || cardBtmInteractions === void 0 ? void 0 : cardBtmInteractions.map((interaction, i) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"questionBtmRightInteractionItem\",\n          onClick: interaction === null || interaction === void 0 ? void 0 : interaction.action,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: upVote && (interaction === null || interaction === void 0 ? void 0 : interaction.name) === \"upvote\" ? 'material-icons material-icons.md-36 icon cardIconUpVoted' : 'material-icons material-icons.md-36 icon cardIcon',\n            children: interaction === null || interaction === void 0 ? void 0 : interaction.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"questionBtmRightInteraction-metrics text-normal\",\n            children: [(interaction === null || interaction === void 0 ? void 0 : interaction.name) === \"downVote\" && (interaction === null || interaction === void 0 ? void 0 : interaction.interactionCount) > 0 && \"-\", (interaction === null || interaction === void 0 ? void 0 : interaction.name) === \"comment\" && \"Answer (\", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: interaction === null || interaction === void 0 ? void 0 : interaction.interactionCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 37\n            }, this), (interaction === null || interaction === void 0 ? void 0 : interaction.name) === \"comment\" && \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 33\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questionBtmRightInteractionItem\",\n      onClick: updateSaved,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-icons material-icons.md-36 icon\",\n        children: saved ? \"bookmark_added\" : \"bookmark_add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 9\n  }, this);\n};\n_s(BottomButtons, \"j66IsCPgatyAJRGx52N5Xgtuljs=\", false, function () {\n  return [useNavigate, useToken, useLoggedInUser, useInteraction];\n});\n_c = BottomButtons;\nvar _c;\n$RefreshReg$(_c, \"BottomButtons\");","map":{"version":3,"names":["React","useEffect","useState","requestDataOf","useInteraction","useNavigate","useLoggedInUser","useToken","jsxDEV","_jsxDEV","BottomButtons","question","index","_s","_question$upVotes","_question$downVotes","_question$answers","navigatTo","upVote","setUpVote","downVote","setDownVote","saved","setSaved","token","loggedInUser","i","_question$topics","topics","length","upVotes","_id","prevUpVote","handleUpvote","updatedUpVotes","filter","userId","upVotePayload","updateUpVotes","userUpvotedIndex","indexOf","slice","request","then","response","alert","catch","error","console","updateDownVotes","userDownvotedIndex","downVotes","updatedDownVotes","downVotePayload","updateSaved","_loggedInUser$saved","userSavedQuestions","questions","userSavedIndex","splice","userPayload","log","_response$data","user","data","sessionStorage","setItem","JSON","stringify","updatedSaved","_response$data2","cardBtmInteractions","name","icon","interactionCount","action","answers","className","children","map","interaction","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Mdpma/Documents/Open Window/Term-4-Group-2---Project/client/term4-group2-qna/src/components/elements/Cards/QuestionCard/Card Functions/Interaction/BottomButtons.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport requestDataOf from '../../../../../util/DataRequests/fetchData';\r\nimport { useInteraction } from '../../../../../util/UI/interactionListener';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useLoggedInUser, useToken } from '../../../../../util/UseContext/loggedInUserContext';\r\n\r\nexport const BottomButtons = ({ question, index }) => {\r\n\r\n    const navigatTo = useNavigate();\r\n    const [upVote, setUpVote] = useState(false);\r\n    const [downVote, setDownVote] = useState(false);\r\n    const [saved, setSaved] = useState(false);\r\n    const { token } = useToken();\r\n    const { loggedInUser } = useLoggedInUser();\r\n\r\n    useEffect(() => {\r\n        // index && console.log(index);\r\n\r\n        // Upvote State Check\r\n        for (let i = 0; i < question?.topics?.length; i++) {\r\n            if (question?.upVotes[i] === loggedInUser?._id) {\r\n                setUpVote(prevUpVote => {\r\n                    // Use a callback function to get the previous state and update it\r\n                    // console.log(`UpVoteState: ${index}`, prevUpVote); // Log the updated value\r\n                    return true; // Update the state to the opposite value\r\n                });\r\n                // break;\r\n            }\r\n        }\r\n    }, [useInteraction()])\r\n\r\n    // Button Functions\r\n    const handleUpvote = () => {\r\n        if (upVote) {\r\n            // Remove the upvote\r\n            const updatedUpVotes = question.upVotes.filter(userId => userId !== loggedInUser?._id);\r\n            const upVotePayload = { upVotes: updatedUpVotes };\r\n            updateUpVotes(upVotePayload);\r\n        } else {\r\n            // Add the upvote\r\n            const updatedUpVotes = [...question.upVotes, loggedInUser?._id];\r\n            const upVotePayload = { upVotes: updatedUpVotes };\r\n            updateUpVotes(upVotePayload);\r\n        }\r\n    };\r\n\r\n    const updateUpVotes = (upVotePayload) => {\r\n        // Check if the user has already upvoted the question\r\n        const userUpvotedIndex = question?.upVotes.indexOf(loggedInUser?._id);\r\n\r\n        if (userUpvotedIndex !== -1) {\r\n            // If the user has already upvoted, remove their upvote\r\n            const updatedUpVotes = [...question.upVotes.slice(0, userUpvotedIndex), ...question.upVotes.slice(userUpvotedIndex + 1)];\r\n            const upVotePayload = { upVotes: updatedUpVotes };\r\n\r\n            // Update the question with the new upvotes array\r\n            requestDataOf\r\n                .request(\"patch\", `updateQuestion/${question?._id}`, token, upVotePayload)\r\n                .then((response) => {\r\n                    setUpVote(false)\r\n                    // Handle the response if necessary\r\n                    alert(\"Upvote removed\");\r\n                })\r\n                .catch((error) => {\r\n                    // Handle the error if necessary\r\n                    console.error(error);\r\n                });\r\n        } else {\r\n            setUpVote(true)\r\n            // If the user hasn't upvoted, add their upvote\r\n            const updatedUpVotes = [...question.upVotes, loggedInUser?._id];\r\n            const upVotePayload = { upVotes: updatedUpVotes };\r\n\r\n            // Update the question with the new upvotes array\r\n            requestDataOf\r\n                .request(\"patch\", `updateQuestion/${question?._id}`, token, upVotePayload)\r\n                .then((response) => {\r\n                    setUpVote(true)\r\n                    // Handle the response if necessary\r\n                    alert(\"Upvoted\");\r\n                })\r\n                .catch((error) => {\r\n                    // Handle the error if necessary\r\n                    console.error(error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const updateDownVotes = () => {\r\n        // Check if the user has already downvoted the question\r\n        const userDownvotedIndex = question?.downVotes.indexOf(loggedInUser?._id);\r\n\r\n        if (userDownvotedIndex !== -1) {\r\n            // If the user has already downvoted, remove their downvote\r\n            const updatedDownVotes = [\r\n                ...question.downVotes.slice(0, userDownvotedIndex),\r\n                ...question.downVotes.slice(userDownvotedIndex + 1)\r\n            ];\r\n\r\n            const downVotePayload = { downVotes: updatedDownVotes };\r\n\r\n            // Update the question with the new downvotes array\r\n            requestDataOf\r\n                .request(\"patch\", `updateQuestion/${question?._id}`, token, downVotePayload)\r\n                .then((response) => {\r\n                    setDownVote(false);\r\n                    // Handle the response if necessary\r\n                    alert(\"Downvote removed\");\r\n                })\r\n                .catch((error) => {\r\n                    // Handle the error if necessary\r\n                    console.error(error);\r\n                });\r\n        } else {\r\n            setDownVote(true);\r\n            // If the user hasn't downvoted, add their downvote\r\n            const updatedDownVotes = [...question.downVotes, loggedInUser?._id];\r\n            const downVotePayload = { downVotes: updatedDownVotes };\r\n\r\n            // Update the question with the new downvotes array\r\n            requestDataOf\r\n                .request(\"patch\", `updateQuestion/${question?._id}`, token, downVotePayload)\r\n                .then((response) => {\r\n                    setDownVote(true);\r\n                    // Handle the response if necessary\r\n                    alert(\"Downvoted\");\r\n                })\r\n                .catch((error) => {\r\n                    // Handle the error if necessary\r\n                    console.error(error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const updateSaved = () => {\r\n        const userSavedQuestions = loggedInUser?.saved?.questions || [];\r\n        const userSavedIndex = userSavedQuestions.indexOf(question?._id);\r\n\r\n        if (userSavedIndex !== -1) {\r\n            // If the user has already saved the question, remove it from saved\r\n            userSavedQuestions.splice(userSavedIndex, 1);\r\n\r\n            const userPayload = { saved: { questions: userSavedQuestions } };\r\n            console.log('Remove Payload:', userPayload); // Add this line for debugging\r\n\r\n            // Update the user object with the new saved array\r\n            requestDataOf\r\n                .request(\"patch\", `updateUser/${loggedInUser._id}`, token, userPayload)\r\n                .then((response) => {\r\n                    const user = response?.data?.user;\r\n                    console.log('Updated User:', user); // Add this line for debugging\r\n                    sessionStorage.setItem('user', JSON.stringify(user));\r\n                    alert(\"Question removed from saved\");\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                });\r\n        } else {\r\n            // If the user hasn't saved the question, add it to saved\r\n            const updatedSaved = [...userSavedQuestions, question?._id];\r\n            const userPayload = { saved: { questions: updatedSaved } };\r\n            console.log('Add Payload:', userPayload); // Add this line for debugging\r\n\r\n            // Update the user object with the new saved array\r\n            requestDataOf\r\n                .request(\"patch\", `updateUser/${loggedInUser._id}`, token, userPayload)\r\n                .then((response) => {\r\n                    const user = response?.data?.user;\r\n                    console.log('Updated User:', user); // Add this line for debugging\r\n                    sessionStorage.setItem('user', JSON.stringify(user));\r\n                    alert(\"Question saved\");\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                });\r\n        }\r\n    };\r\n\r\n\r\n    // Card Bottom Interactions\r\n    const cardBtmInteractions = [\r\n        {\r\n            name: 'upVote',\r\n            icon: \"arrow_circle_up\",\r\n            interactionCount: question?.upVotes?.length,\r\n            upVote: upVote,\r\n            action: updateUpVotes\r\n        },\r\n        {\r\n            name: 'downVote',\r\n            icon: \"arrow_circle_down\",\r\n            interactionCount: question?.downVotes?.length,\r\n            downVote: downVote,\r\n            action: updateDownVotes\r\n        },\r\n        {\r\n            name: 'comment',\r\n            icon: \"mode_comment\",\r\n            interactionCount: question?.answers?.length,\r\n            action: () => { navigatTo(`/question/${question?._id}`) }\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <div className='questionBtmInteractionsWrap'>\r\n            <ul className='questionBtmRightInteraction'>\r\n                {\r\n                    cardBtmInteractions?.map((interaction, i) => {\r\n                        return (\r\n                            <li key={i} className='questionBtmRightInteractionItem'\r\n                                onClick={interaction?.action}>\r\n                                <span className={\r\n                                    upVote && interaction?.name === \"upvote\" ? 'material-icons material-icons.md-36 icon cardIconUpVoted' :\r\n                                        'material-icons material-icons.md-36 icon cardIcon'}>\r\n                                    {interaction?.icon}\r\n                                </span>\r\n                                <div className='questionBtmRightInteraction-metrics text-normal'>\r\n                                    {interaction?.name === \"downVote\" && interaction?.interactionCount > 0 && \"-\"}\r\n                                    {interaction?.name === \"comment\" && \"Answer (\"}\r\n                                    <b>{interaction?.interactionCount}</b>\r\n                                    {interaction?.name === \"comment\" && \")\"}\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n            <div className='questionBtmRightInteractionItem'\r\n                onClick={updateSaved}>\r\n                <span className='material-icons material-icons.md-36 icon'>\r\n                    {saved ? \"bookmark_added\" : \"bookmark_add\"}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}