{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mdpma\\\\Documents\\\\Open Window\\\\Term-4-Group-2---Project\\\\client\\\\term4-group2-qna\\\\src\\\\components\\\\screens\\\\Content\\\\Questions\\\\questions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./questions.css\";\nimport { useParams } from \"react-router-dom\";\nimport { QuestionCard } from \"../../../elements/Cards/QuestionCard/questionCard\";\n// import questionsDemoData from \"../../../../test_data/question.data\";\n// import answerDemoData from \"../../../../test_data/answer.data\";\nimport LeftBar from \"../../../elements/SideBars/leftBar\";\nimport { AnswerCard } from \"../../../elements/Cards/AnswerCard/answerCard\";\nimport { useQuestions } from \"../../../util/UseContext/questionsContext\";\nimport { useAnswers } from \"../../../util/UseContext/answersContext\";\nimport { useLoggedInUser, useToken } from \"../../../util/UseContext/loggedInUserContext\";\nimport { useUsers } from \"../../../util/UseContext/usersContext\";\nimport { useInteraction } from \"../../../util/UI/interactionListener\";\nimport requestDataOf from \"../../../util/DataRequests/fetchData\";\n// import from \"./\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Questions = () => {\n  _s();\n  //   const [Questions, setQuestions] = useState(questionsDemoData);\n  const {\n    answers,\n    setAnswers\n  } = useAnswers();\n  const {\n    questions\n  } = useQuestions();\n  const {\n    user\n  } = useLoggedInUser();\n  const {\n    users\n  } = useUsers();\n  const {\n    token\n  } = useToken();\n  const {\n    id\n  } = useParams();\n  const specificQuestion = questions.find(question => question._id === id);\n  const specificQuestionAnswers = specificQuestion ? specificQuestion.answers : [];\n  const [newAnswer, setNewAnswer] = useState(\"\");\n  const handlePostAnswer = async () => {\n    try {\n      // Send a POST request to the answers API with the new answer data\n      const response = await fetch('${useAnswers}', {\n        method: \"POST\",\n        headers: {\n          'Content-Type': \"application/json\",\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          text: newAnswer,\n          question: specificQuestion._id\n        })\n      });\n      if (response.ok) {\n        const newAnswerData = await response.json();\n        setAnswers([...specificQuestionAnswers, newAnswerData]);\n        setNewAnswer(\"\");\n        console.log(\"Answer posted successfully\", newAnswerData);\n      } else {\n        console.error(\"Error posting answer:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error posting answer:\", error);\n    }\n  };\n  console.log(\"Specific Question Answers: \", specificQuestionAnswers);\n  console.log(\"Answer Data in Answers component:\", questions);\n  console.log(\"question ID \", specificQuestion);\n  const options = [{\n    label: \"Top\",\n    value: \"top\"\n  }, {\n    label: \"Newest\",\n    value: \"newest\"\n  }, {\n    label: \"Oldest\",\n    value: \"oldest\"\n  }];\n  useEffect(() => {\n    // console.log(\"tkn: \", token)\n  }, [user, users, questions, useInteraction()]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftBar\",\n      children: /*#__PURE__*/_jsxDEV(LeftBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centerWrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-box\",\n        children: questions.length > 0 ? /*#__PURE__*/_jsxDEV(QuestionCard, {\n          question: specificQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No questions available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-add-comment\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-filter\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"dropdown-filter\",\n            children: [\"Sort by:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"select-box\",\n              children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AddComment-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"4\",\n          cols: \"50\",\n          value: newAnswer,\n          onChange: e => setNewAnswer(e.target.value),\n          placeholder: \"Write your comment here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"addComment-Btn\",\n          onClick: handlePostAnswer,\n          children: \"Post Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answerCard-Box\",\n        children: answers.length > 0 ? /*#__PURE__*/_jsxDEV(AnswerCard, {\n          answer: specificQuestionAnswers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No answers available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightBar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Questions, \"RBy0ggB2wEmQ2lw6VUKkXTmhTTg=\", false, function () {\n  return [useAnswers, useQuestions, useLoggedInUser, useUsers, useToken, useParams, useInteraction];\n});\n_c = Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","useState","useEffect","useParams","QuestionCard","LeftBar","AnswerCard","useQuestions","useAnswers","useLoggedInUser","useToken","useUsers","useInteraction","requestDataOf","jsxDEV","_jsxDEV","Questions","_s","answers","setAnswers","questions","user","users","token","id","specificQuestion","find","question","_id","specificQuestionAnswers","newAnswer","setNewAnswer","handlePostAnswer","response","fetch","method","headers","body","JSON","stringify","text","ok","newAnswerData","json","console","log","error","statusText","options","label","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","option","rows","cols","onChange","e","target","placeholder","onClick","answer","_c","$RefreshReg$"],"sources":["C:/Users/Mdpma/Documents/Open Window/Term-4-Group-2---Project/client/term4-group2-qna/src/components/screens/Content/Questions/questions.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./questions.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { QuestionCard } from \"../../../elements/Cards/QuestionCard/questionCard\";\r\n// import questionsDemoData from \"../../../../test_data/question.data\";\r\n// import answerDemoData from \"../../../../test_data/answer.data\";\r\nimport LeftBar from \"../../../elements/SideBars/leftBar\";\r\nimport { AnswerCard } from \"../../../elements/Cards/AnswerCard/answerCard\";\r\nimport { useQuestions } from \"../../../util/UseContext/questionsContext\";\r\nimport { useAnswers } from \"../../../util/UseContext/answersContext\";\r\nimport {\r\n  useLoggedInUser,\r\n  useToken,\r\n} from \"../../../util/UseContext/loggedInUserContext\";\r\nimport { useUsers } from \"../../../util/UseContext/usersContext\";\r\nimport { useInteraction } from \"../../../util/UI/interactionListener\";\r\nimport requestDataOf from \"../../../util/DataRequests/fetchData\";\r\n// import from \"./\";\r\n\r\nexport const Questions = () => {\r\n  //   const [Questions, setQuestions] = useState(questionsDemoData);\r\n  const { answers, setAnswers } = useAnswers();\r\n  const { questions } = useQuestions();\r\n  const { user } = useLoggedInUser();\r\n  const { users } = useUsers();\r\n  const { token } = useToken();\r\n  const { id } = useParams();\r\n\r\n  const specificQuestion = questions.find((question) => question._id === id);\r\n  const specificQuestionAnswers = specificQuestion\r\n    ? specificQuestion.answers\r\n    : [];\r\n\r\n  const [newAnswer, setNewAnswer] = useState(\"\");\r\n\r\n  const handlePostAnswer = async () => {\r\n    try {\r\n      // Send a POST request to the answers API with the new answer data\r\n      const response = await fetch('${useAnswers}', {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Content-Type': \"application/json\",\r\n          'Authorization': `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          text: newAnswer, \r\n          question: specificQuestion._id, \r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const newAnswerData = await response.json();\r\n        setAnswers([...specificQuestionAnswers, newAnswerData]);\r\n        setNewAnswer(\"\");\r\n\r\n        console.log(\"Answer posted successfully\", newAnswerData);\r\n      } else {\r\n        console.error(\"Error posting answer:\", response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error posting answer:\", error);\r\n    }\r\n  };\r\n\r\n  console.log(\"Specific Question Answers: \", specificQuestionAnswers);\r\n  console.log(\"Answer Data in Answers component:\", questions);\r\n  console.log(\"question ID \", specificQuestion);\r\n  const options = [\r\n    { label: \"Top\", value: \"top\" },\r\n\r\n    { label: \"Newest\", value: \"newest\" },\r\n\r\n    { label: \"Oldest\", value: \"oldest\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // console.log(\"tkn: \", token)\r\n  }, [user, users, questions, useInteraction()]);\r\n\r\n  return (\r\n    <div className=\"Comment\">\r\n      {/* ------------------LeftBar------------------------------------ */}\r\n      <div className=\"leftBar\">\r\n        <LeftBar />\r\n      </div>\r\n      {/* ------------------MiddleSection------------------------------- */}\r\n      <div className=\"centerWrap\">\r\n        {/* ----------------MainQuestion-------------------------------- */}\r\n        <div className=\"question-box\">\r\n          {questions.length > 0 ? (\r\n            <QuestionCard question={specificQuestion} />\r\n          ) : (\r\n            <p>No questions available</p>\r\n          )}\r\n        </div>\r\n        {/* ----------------Filter------------------------------------ */}\r\n        <div className=\"filter-add-comment\">\r\n          <div className=\"comment-filter\">\r\n            <label className=\"dropdown-filter\">\r\n              Sort by:\r\n              <select className=\"select-box\">\r\n                {options.map((option) => (\r\n                  <option value={option.value}>{option.label}</option>\r\n                ))}\r\n              </select>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        {/* -----------------AddComment--------------------------------- */}\r\n        <div className=\"AddComment-box\">\r\n          <textarea\r\n            rows=\"4\"\r\n            cols=\"50\"\r\n            value={newAnswer}\r\n            onChange={(e) => setNewAnswer(e.target.value)}\r\n            placeholder=\"Write your comment here...\"\r\n          />\r\n          <br />\r\n          <button\r\n            className=\"addComment-Btn\"\r\n            onClick={handlePostAnswer}\r\n          >\r\n            Post Comment\r\n          </button>\r\n        </div>\r\n        {/* ----------------AnswerCard------------------------------------ */}\r\n        <div className=\"answerCard-Box\">\r\n          {answers.length > 0 ? (\r\n            <AnswerCard answer={specificQuestionAnswers} />\r\n          ) : (\r\n            <p>No answers available</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"rightBar\"></div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}