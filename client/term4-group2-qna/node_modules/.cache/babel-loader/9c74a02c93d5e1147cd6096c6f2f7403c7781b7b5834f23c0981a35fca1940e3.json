{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mdpma\\\\Documents\\\\Open Window\\\\Term-4-Group-2---Project\\\\client\\\\term4-group2-qna\\\\src\\\\components\\\\util\\\\UI\\\\interactionListener.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InteractionContext = /*#__PURE__*/createContext();\nexport const InteractionProvider = ({\n  children\n}) => {\n  _s();\n  const [interactionState, setInteractionState] = useState('click'); // Set initial state to 'Click'\n  const [eventInfo, setEventInfo] = useState(null);\n  useEffect(() => {\n    function handleInteraction(event) {\n      const interactionType = event.type === 'click' ? 'click' : 'scroll';\n      setInteractionState(interactionType);\n      setEventInfo(event);\n\n      // Reset to 'Idle' state after 100 milliseconds\n      setTimeout(() => {\n        setInteractionState('idle');\n        setEventInfo(null);\n      }, 100);\n    }\n    document.body.addEventListener('click', handleInteraction);\n    // window.addEventListener('scroll', handleInteraction);\n\n    return () => {\n      document.body.removeEventListener('click', handleInteraction);\n      // window.removeEventListener('scroll', handleInteraction);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(InteractionContext.Provider, {\n    value: {\n      interactionState,\n      eventInfo\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(InteractionProvider, \"loVsagdClor3EaX47nmNbZSIUc8=\");\n_c = InteractionProvider;\nexport const useInteraction = () => {\n  _s2();\n  const context = useContext(InteractionContext);\n  if (context === undefined) {\n    throw new Error('useInteraction must be used within an InteractionProvider');\n  }\n  return context;\n};\n_s2(useInteraction, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"InteractionProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","InteractionContext","InteractionProvider","children","_s","interactionState","setInteractionState","eventInfo","setEventInfo","handleInteraction","event","interactionType","type","setTimeout","document","body","addEventListener","removeEventListener","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useInteraction","_s2","context","undefined","Error","$RefreshReg$"],"sources":["C:/Users/Mdpma/Documents/Open Window/Term-4-Group-2---Project/client/term4-group2-qna/src/components/util/UI/interactionListener.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst InteractionContext = createContext();\r\n\r\nexport const InteractionProvider = ({ children }) => {\r\n    const [interactionState, setInteractionState] = useState('click'); // Set initial state to 'Click'\r\n    const [eventInfo, setEventInfo] = useState(null);\r\n\r\n    useEffect(() => {\r\n        function handleInteraction(event) {\r\n            const interactionType = event.type === 'click' ? 'click' : 'scroll';\r\n            setInteractionState(interactionType);\r\n            setEventInfo(event);\r\n\r\n            // Reset to 'Idle' state after 100 milliseconds\r\n            setTimeout(() => {\r\n                setInteractionState('idle');\r\n                setEventInfo(null);\r\n            }, 100);\r\n        }\r\n\r\n        document.body.addEventListener('click', handleInteraction);\r\n        // window.addEventListener('scroll', handleInteraction);\r\n\r\n        return () => {\r\n            document.body.removeEventListener('click', handleInteraction);\r\n            // window.removeEventListener('scroll', handleInteraction);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <InteractionContext.Provider value={{ interactionState, eventInfo }}>\r\n            {children}\r\n        </InteractionContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useInteraction = () => {\r\n    const context = useContext(InteractionContext);\r\n    if (context === undefined) {\r\n        throw new Error('useInteraction must be used within an InteractionProvider');\r\n    }\r\n    return context;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,kBAAkB,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EACnE,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACZ,SAASW,iBAAiBA,CAACC,KAAK,EAAE;MAC9B,MAAMC,eAAe,GAAGD,KAAK,CAACE,IAAI,KAAK,OAAO,GAAG,OAAO,GAAG,QAAQ;MACnEN,mBAAmB,CAACK,eAAe,CAAC;MACpCH,YAAY,CAACE,KAAK,CAAC;;MAEnB;MACAG,UAAU,CAAC,MAAM;QACbP,mBAAmB,CAAC,MAAM,CAAC;QAC3BE,YAAY,CAAC,IAAI,CAAC;MACtB,CAAC,EAAE,GAAG,CAAC;IACX;IAEAM,QAAQ,CAACC,IAAI,CAACC,gBAAgB,CAAC,OAAO,EAAEP,iBAAiB,CAAC;IAC1D;;IAEA,OAAO,MAAM;MACTK,QAAQ,CAACC,IAAI,CAACE,mBAAmB,CAAC,OAAO,EAAER,iBAAiB,CAAC;MAC7D;IACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,OAAA,CAACC,kBAAkB,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEd,gBAAgB;MAAEE;IAAU,CAAE;IAAAJ,QAAA,EAC/DA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEtC,CAAC;AAACnB,EAAA,CA/BWF,mBAAmB;AAAAsB,EAAA,GAAnBtB,mBAAmB;AAiChC,OAAO,MAAMuB,cAAc,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAChC,MAAMC,OAAO,GAAG/B,UAAU,CAACK,kBAAkB,CAAC;EAC9C,IAAI0B,OAAO,KAAKC,SAAS,EAAE;IACvB,MAAM,IAAIC,KAAK,CAAC,2DAA2D,CAAC;EAChF;EACA,OAAOF,OAAO;AAClB,CAAC;AAACD,GAAA,CANWD,cAAc;AAAA,IAAAD,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}